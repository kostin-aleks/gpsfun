# Generated by Django 3.1.2 on 2021-06-04 10:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.IntegerField(default=0)),
                ('code', models.CharField(max_length=32)),
                ('type_code', models.CharField(max_length=2)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=128, null=True)),
                ('town', models.CharField(blank=True, max_length=64, null=True)),
                ('oblast', models.CharField(blank=True, max_length=64, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('grade', models.FloatField(blank=True, null=True)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('admin_code', models.CharField(blank=True, max_length=6, null=True)),
                ('country_name', models.CharField(blank=True, max_length=64, null=True)),
                ('oblast_name', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'cach',
            },
        ),
        migrations.CreateModel(
            name='CacheDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_pid', models.IntegerField(default=0)),
                ('terrain_description', models.TextField(blank=True, null=True)),
                ('cache_description', models.TextField(blank=True, null=True)),
                ('virtual_part', models.TextField(blank=True, null=True)),
                ('cache_content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cache_description',
            },
        ),
        migrations.CreateModel(
            name='CacheLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cache_pid', models.IntegerField(default=0)),
                ('logged_by_uid', models.IntegerField(blank=True, null=True)),
                ('logged_by_nick', models.CharField(blank=True, max_length=64, null=True)),
                ('log_type', models.CharField(blank=True, max_length=16, null=True)),
                ('log_date', models.DateTimeField(blank=True, null=True)),
                ('txt', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cache_log',
            },
        ),
        migrations.CreateModel(
            name='CachStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cach_pid', models.IntegerField(default=0, verbose_name='pid')),
                ('recommend_count', models.IntegerField(blank=True, null=True, verbose_name='recommendations')),
                ('found_count', models.IntegerField(blank=True, null=True, verbose_name='found')),
                ('rank', models.FloatField(blank=True, null=True, verbose_name='rank')),
                ('points', models.FloatField(blank=True, null=True, verbose_name='points')),
            ],
            options={
                'db_table': 'cach_stat',
            },
        ),
        migrations.CreateModel(
            name='Geocacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(null=True, unique=True)),
                ('nickname', models.CharField(max_length=64)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('birstday', models.DateTimeField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, max_length=1, null=True)),
                ('country', models.CharField(blank=True, max_length=128, null=True)),
                ('town', models.CharField(blank=True, max_length=64, null=True)),
                ('oblast', models.CharField(blank=True, max_length=64, null=True)),
                ('created_caches', models.IntegerField(default=0, null=True)),
                ('found_caches', models.IntegerField(default=0, null=True)),
                ('register_date', models.DateTimeField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('forum_posts', models.IntegerField(default=0, null=True)),
                ('country_iso3', models.CharField(blank=True, max_length=3, null=True)),
                ('admin_code', models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                'db_table': 'geocacher',
            },
        ),
        migrations.CreateModel(
            name='GeocacherSearchStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geocacher_uid', models.IntegerField(default=0)),
                ('points', models.IntegerField(blank=True, default=0, null=True)),
                ('year_points', models.IntegerField(blank=True, default=0, null=True)),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('region', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'geocacher_search_stat',
            },
        ),
        migrations.CreateModel(
            name='GeocacherStat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('found_count', models.IntegerField(blank=True, null=True)),
                ('created_count', models.IntegerField(blank=True, null=True)),
                ('curr_found_count', models.IntegerField(blank=True, null=True)),
                ('curr_created_count', models.IntegerField(blank=True, null=True)),
                ('last_found_count', models.IntegerField(blank=True, null=True)),
                ('last_created_count', models.IntegerField(blank=True, null=True)),
                ('av_grade', models.FloatField(blank=True, null=True)),
                ('av_his_cach_grade', models.FloatField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=64, null=True)),
                ('region', models.CharField(blank=True, max_length=128, null=True)),
                ('vi_found_count', models.IntegerField(blank=True, null=True)),
                ('vi_created_count', models.IntegerField(blank=True, null=True)),
                ('vi_curr_found_count', models.IntegerField(blank=True, null=True)),
                ('vi_curr_created_count', models.IntegerField(blank=True, null=True)),
                ('vi_last_found_count', models.IntegerField(blank=True, null=True)),
                ('vi_last_created_count', models.IntegerField(blank=True, null=True)),
                ('tr_found_count', models.IntegerField(blank=True, null=True)),
                ('tr_created_count', models.IntegerField(blank=True, null=True)),
                ('tr_curr_found_count', models.IntegerField(blank=True, null=True)),
                ('tr_curr_created_count', models.IntegerField(blank=True, null=True)),
                ('tr_last_found_count', models.IntegerField(blank=True, null=True)),
                ('tr_last_created_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geocacher_stat',
            },
        ),
        migrations.CreateModel(
            name='LogCreateCach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_uid', models.IntegerField(default=0)),
                ('cach_pid', models.IntegerField(default=0)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('coauthor', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'log_create_cach',
            },
        ),
        migrations.CreateModel(
            name='LogRecommendCach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cacher_uid', models.IntegerField(default=0)),
                ('cach_pid', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'log_recommend_cach',
            },
        ),
        migrations.CreateModel(
            name='LogSeekCach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cacher_uid', models.IntegerField(default=0)),
                ('cach_pid', models.IntegerField(default=0)),
                ('found_date', models.DateTimeField(blank=True, null=True)),
                ('grade', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'log_seek_cach',
            },
        ),
        migrations.AddIndex(
            model_name='logseekcach',
            index=models.Index(fields=['cacher_uid'], name='log_seek_ca_cacher__740b9d_idx'),
        ),
        migrations.AddIndex(
            model_name='logseekcach',
            index=models.Index(fields=['cach_pid'], name='log_seek_ca_cach_pi_b3269f_idx'),
        ),
        migrations.AddIndex(
            model_name='logseekcach',
            index=models.Index(fields=['found_date'], name='log_seek_ca_found_d_68b594_idx'),
        ),
        migrations.AddIndex(
            model_name='logrecommendcach',
            index=models.Index(fields=['cacher_uid'], name='log_recomme_cacher__f67ce7_idx'),
        ),
        migrations.AddIndex(
            model_name='logrecommendcach',
            index=models.Index(fields=['cach_pid'], name='log_recomme_cach_pi_9b935c_idx'),
        ),
        migrations.AddIndex(
            model_name='logcreatecach',
            index=models.Index(fields=['author_uid'], name='log_create__author__cbf843_idx'),
        ),
        migrations.AddIndex(
            model_name='logcreatecach',
            index=models.Index(fields=['cach_pid'], name='log_create__cach_pi_df4329_idx'),
        ),
        migrations.AddIndex(
            model_name='logcreatecach',
            index=models.Index(fields=['created_date'], name='log_create__created_21dd7d_idx'),
        ),
        migrations.AddField(
            model_name='geocacherstat',
            name='geocacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeoCachSU.geocacher', verbose_name='Geocacher'),
        ),
        migrations.AddField(
            model_name='geocachersearchstat',
            name='geocacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='GeoCachSU.geocacher', verbose_name='Geocacher'),
        ),
        migrations.AddIndex(
            model_name='geocacher',
            index=models.Index(fields=['uid'], name='geocacher_uid_4f8b4c_idx'),
        ),
        migrations.AddIndex(
            model_name='geocacher',
            index=models.Index(fields=['nickname'], name='geocacher_nicknam_9048e5_idx'),
        ),
        migrations.AddField(
            model_name='cachstat',
            name='cach',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeoCachSU.cach', verbose_name='cache'),
        ),
        migrations.AddField(
            model_name='cachstat',
            name='geocacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeoCachSU.geocacher', verbose_name='geocacher'),
        ),
        migrations.AddField(
            model_name='cachelog',
            name='cache',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeoCachSU.cach'),
        ),
        migrations.AddField(
            model_name='cachedescription',
            name='cache',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GeoCachSU.cach'),
        ),
        migrations.AddField(
            model_name='cach',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='GeoCachSU.geocacher'),
        ),
        migrations.AddIndex(
            model_name='geocacherstat',
            index=models.Index(fields=['uid'], name='geocacher_s_uid_c31f6e_idx'),
        ),
        migrations.AddIndex(
            model_name='geocachersearchstat',
            index=models.Index(fields=['geocacher_uid'], name='geocacher_s_geocach_96ef12_idx'),
        ),
        migrations.AddIndex(
            model_name='cachstat',
            index=models.Index(fields=['cach_pid'], name='cach_stat_cach_pi_ce55a6_idx'),
        ),
        migrations.AddIndex(
            model_name='cachelog',
            index=models.Index(fields=['logged_by_uid'], name='cache_log_logged__bb4006_idx'),
        ),
        migrations.AddIndex(
            model_name='cachelog',
            index=models.Index(fields=['cache_pid'], name='cache_log_cache_p_1daf69_idx'),
        ),
        migrations.AddIndex(
            model_name='cachelog',
            index=models.Index(fields=['log_type'], name='cache_log_log_typ_3889a2_idx'),
        ),
        migrations.AddIndex(
            model_name='cachelog',
            index=models.Index(fields=['log_date'], name='cache_log_log_dat_fca718_idx'),
        ),
        migrations.AddIndex(
            model_name='cachedescription',
            index=models.Index(fields=['cache_pid'], name='cache_descr_cache_p_f5e8bd_idx'),
        ),
        migrations.AddIndex(
            model_name='cach',
            index=models.Index(fields=['pid'], name='cach_pid_64a462_idx'),
        ),
        migrations.AddIndex(
            model_name='cach',
            index=models.Index(fields=['type_code'], name='cach_type_co_d9d356_idx'),
        ),
        migrations.AddIndex(
            model_name='cach',
            index=models.Index(fields=['created_date'], name='cach_created_c1458c_idx'),
        ),
        migrations.AddIndex(
            model_name='cach',
            index=models.Index(fields=['country_code'], name='cach_country_fe35df_idx'),
        ),
        migrations.AddIndex(
            model_name='cach',
            index=models.Index(fields=['admin_code'], name='cach_admin_c_8a7d8f_idx'),
        ),
    ]
