import os

from django.db import models


def _to_absolute_path(path, base_path):
    if path and not path.startswith("/"):
        return os.path.join(base_path, path)
    return path


class RelativeFilePathField(models.FilePathField):

    """This field adds get_[field_name]_path function to the model class that returns absolute path."""

    def value_from_object(self, obj):
        val = super(RelativeFilePathField, self).value_from_object(obj)
        return _to_absolute_path(val, self.path)

    def pre_save(self, model_instance, add):
        val = super(RelativeFilePathField, self).pre_save(model_instance, add)
        if val and val.startswith(self.path):
            return os.path.relpath(val, self.path)
        return val

    def contribute_to_class(self, cls, name):
        super(RelativeFilePathField, self).contribute_to_class(cls, name)

        field = self
        def path_func(obj):
            path = getattr(obj, name)
            return _to_absolute_path(path, field.path)

        setattr(cls, 'get_%s_path' % self.name, path_func)



